{"name":"Apm-mavlink-to-frsky","tagline":"Arducopter Mavlink telemetry to FrSky Taranis","body":"## Arducopter Mavlink telemetry to FrSky Taranis.\r\nThis project was created to get telemetry data from the APM down to my Taranis radio. Using an Arduino Pro mini we can read Mavlink data from the APM and translate this to the FrSky hub telemetry protocol. This means that this will only work with FrSky receivers that support the old telemetry protocol, D4R-II, D8R-XP etc. A S.Port implementation for the X8R will be implemented as soon as someone hacks the protocol.\r\n\r\nDownload the latest hex for arduino pro mini [here](https://github.com/vizual54/APM-Mavlink-to-FrSky/tree/master/Binaries)\r\n\r\n## Data currently sent to the Taranis is:\r\n* Alt:      Altitude from ARM point\r\n* Rpm:      Throttle out\r\n* Fuel:     Battery remaining\r\n* T1:       APM mode\r\n* T2:       Sat fix and count. 38 means 3d fix and 8 sats, 04 means no fix and 4 sats\r\n* Spd:      GPS speed over ground in knots\r\n* Dist:     -\r\n* GAlt:     GPS Altitude\r\n* Cell:     -\r\n* Cels:     Battery voltage\r\n* Vfas:     -\r\n* Curr:     Battery current\r\n* Cnsp:     mAh used totalizer (calculated value in the Taranis)               \r\n* Powr:     Power (calculated value in the Taranis)\r\n* AccX:     Attitude pitch\r\n* AccY:     Attitude roll\r\n* AccZ:     Attitude yaw\r\n* Hdg:      Heading\r\n\r\n## How to connect\r\nThere are two ways to connect your arduino pro mini to the APM. Either by enabling the UART2 port on the APM or by sharing the TX line with the 3DR radio.\r\n\r\n### Using UART2 port\r\nThis way you dont have to connect with the 3dr radio to get the mavlink data going. The Arduino will make a mavlink rate request to the APM.\r\nThis is done by modifying system.pde around line 149 to look like this(AC 3.1RC7).\r\n\r\n\r\n//#if CONFIG_HAL_BOARD != HAL_BOARD_APM2\r\n// we have a 2nd serial port for telemetry on all boards except\r\n// APM2. We actually do have one on APM2 but it isn't necessary as\r\n// a MUX is used\r\nhal.uartC->begin(map_baudrate(g.serial3_baud, SERIAL3_BAUD), 128, 128);\r\ngcs3.init(hal.uartC);\r\n//#endif\r\n\r\nPrecompiled 3.1 for quads can be found [here](https://github.com/vizual54/APM-Mavlink-to-FrSky/tree/master/Binaries)\r\n\r\nBe aware that enabeling uart2 on the APM will add more processor load to the already cogged CPU. Alt hold and auto modes can be affected by this hack. As of AC 3.1 a lot of improvements has been made to lower the load on the APM by the dev team. Running a extra mavlink port should work but do this at your own risk!\r\n\r\n![APM UART2 to Arduino pro mini](https://github.com/vizual54/APM-Mavlink-to-FrSky/blob/master/APM_UART2_to_D4R.jpg?raw=true)\r\n### Sharing UART0 with 3DR radio\r\nThis way you always have to connect with the 3dr radio to get data to the Taranis but you dont have to modify the code and build arducopter yourself.\r\nHere is one way to connect the arduino to the uart0 port to share the TX line with the 3dr radio. you can also split the TX line from the telemetry port of the APM.\r\n![APM UART0 to Arduino pro mini](https://github.com/vizual54/APM-Mavlink-to-FrSky/blob/master/APM_UART0_to_D4R.jpg?raw=true)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}